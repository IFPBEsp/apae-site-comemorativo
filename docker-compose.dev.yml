version: '3.8'

services:
  # PostgreSQL service
  postgres:
    image: postgres:15-alpine
    container_name: apae-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-apae_db}
      POSTGRES_USER: ${POSTGRES_USER:-apae_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apae_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - apae-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-apae_user} -d ${POSTGRES_DB:-apae_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO service
  minio:
    image: minio/minio:latest
    container_name: apae-minio-dev
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data
    networks:
      - apae-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Application service (development)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: apae-app-dev
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-apae_user}:${POSTGRES_PASSWORD:-apae_password}@postgres:5432/${POSTGRES_DB:-apae_db}
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - apae-network
    restart: unless-stopped
    command: npm run dev
    depends_on:
      - postgres
      - minio

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: apae-redis-dev
    volumes:
      - redis_data:/data
    networks:
      - apae-network
    restart: unless-stopped
    ports:
      - "6379:6379"

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: apae-mailhog-dev
    networks:
      - apae-network
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  apae-network:
    driver: bridge
