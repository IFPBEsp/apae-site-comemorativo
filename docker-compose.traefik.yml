version: '3.8'

services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v2.10
    container_name: apae-traefik
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=admin@apae.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
    networks:
      - apae-network
    restart: unless-stopped

  # PostgreSQL service
  postgres:
    image: postgres:15-alpine
    container_name: apae-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-apae_db}
      POSTGRES_USER: ${POSTGRES_USER:-apae_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apae_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - apae-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-apae_user} -d ${POSTGRES_DB:-apae_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO service
  minio:
    image: minio/minio:latest
    container_name: apae-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data
    networks:
      - apae-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.apae.local`)"
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Console
  minio-console:
    image: minio/minio:latest
    container_name: apae-minio-console
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data
    networks:
      - apae-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.apae.local`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

  # Application service
  app:
    image: apae-app:latest
    container_name: apae-app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-apae_user}:${POSTGRES_PASSWORD:-apae_password}@postgres:5432/${POSTGRES_DB:-apae_db}
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - NODE_ENV=production
    networks:
      - apae-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`apae.local`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
    depends_on:
      - postgres
      - minio

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  traefik-letsencrypt:
    driver: local

networks:
  apae-network:
    driver: bridge
